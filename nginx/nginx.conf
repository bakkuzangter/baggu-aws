server {
    listen 80;
    server_name a45d12731770647fcb0ad41456560373-1556302801.ap-northeast-2.elb.amazonaws.com;  # Nginx 서비스의 LoadBalancer DNS

    location / {
        proxy_pass http://afe2157d35c7d4de89db168f19f75d13-1888204399.ap-northeast-2.elb.amazonaws.com:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_redirect off;
    }

    location /socket.io/ {
        proxy_pass http://afe2157d35c7d4de89db168f19f75d13-1888204399.ap-northeast-2.elb.amazonaws.com:8000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
    }

    location /static/ {
        proxy_pass http://afe2157d35c7d4de89db168f19f75d13-1888204399.ap-northeast-2.elb.amazonaws.com:8000/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Health check endpoint
    location /healthz {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}
